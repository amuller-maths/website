{"version":3,"sources":["Pages/Home.js","AppContext.js","Components/Header.js","Pages/Corrections.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","initialState","listeDS","listeEleves","listeQuestions","notes","eleve","devoir","toUpdate","reducer","state","action","type","payload","key","value","AppContext","React","createContext","AppContextProvider","props","useReducer","dispatch","Provider","children","Consumer","Dropdown","liste","onClick","name","map","Header","useContext","handleSave","Object","keys","length","axios","post","ENDPOINT","then","res","to","navigate","Corrections","id","split","useState","setNotes","isLoading","setLoading","questions","useEffect","get","n","data","question","val","defaultChecked","handleUpdate","htmlFor","App","all","spread","res1","res2","res3","finally","path","document","location","href","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c8aebf0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Home = () => {\n  return <h1 className=\"Home\">Bienvenue !</h1>;\n};\n","// AppContext.js\nimport React, { useReducer } from \"react\";\n\nconst initialState = {\n  listeDS: [],\n  listeEleves: [],\n  listeQuestions: {},\n  notes: {},\n  eleve: \"Élève\",\n  devoir: \"Devoir\",\n  toUpdate: {},\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"NOTES\":\n      return {\n        ...state,\n        notes: action.payload,\n      };\n    case \"LISTEQUESTIONS\":\n      return {\n        ...state,\n        listeQuestions: action.payload,\n      };\n    case \"LISTEDS\":\n      return {\n        ...state,\n        listeDS: action.payload,\n      };\n    case \"LISTEELEVES\":\n      return {\n        ...state,\n        listeEleves: action.payload,\n      };\n    case \"ELEVE\":\n      return {\n        ...state,\n        eleve: action.payload,\n      };\n    case \"DEVOIR\":\n      return {\n        ...state,\n        devoir: action.payload,\n      };\n    case \"UPDATE\":\n      return {\n        ...state,\n        toUpdate: {\n          ...state.toUpdate,\n          [action.payload.key]: action.payload.value,\n        },\n      };\n    case \"RESETUPDATE\":\n      return {\n        ...state,\n        toUpdate: {},\n      };\n    default:\n      return state;\n  }\n};\n\nconst AppContext = React.createContext(initialState);\n\nconst AppContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const value = {\n    state,\n    dispatch,\n  };\n\n  return (\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\n  );\n};\n\nconst AppContextConsumer = AppContext.Consumer;\n\nexport { AppContext, AppContextProvider, AppContextConsumer };\n","import React from \"react\";\nimport \"./Header.css\";\nimport axios from \"axios\";\nimport { AppContext } from \"../AppContext\";\nimport { navigate, Link } from \"@reach/router\";\nconst ENDPOINT = \"https://correction-devoirs.herokuapp.com\";\n\nconst Dropdown = ({ liste, onClick, name }) => {\n  return (\n    <li className=\"dropdown\">\n      <div className=\"navbar dropbtn\">{name}</div>\n      <div className=\"dropdown-content\">\n        {liste.map((key) => {\n          return (\n            <div key={key} className=\"navbar\" onClick={() => onClick(key)}>\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    </li>\n  );\n};\n\nconst Header = () => {\n  const { state, dispatch } = React.useContext(AppContext);\n\n  const handleSave = () => {\n    if (Object.keys(state.toUpdate).length !== 0) {\n      axios\n        .post(ENDPOINT + \"/api/notes\", {\n          devoir: state.devoir,\n          eleve: state.eleve,\n          notes: state.toUpdate,\n        })\n        .then((res) => dispatch({ type: \"RESETUPDATE\" }));\n    }\n  };\n\n  const handleClickDevoir = (value) => {\n    dispatch({\n      type: \"DEVOIR\",\n      payload: value,\n    });\n    if (state.devoir !== \"Devoir\" && value !== \"Élève\") {\n      handleSave();\n      navigate(`/corrections/${state.devoir}+${value}`);\n    }\n  };\n\n  const handleClickEleve = (value) => {\n    dispatch({\n      type: \"ELEVE\",\n      payload: value,\n    });\n    if (state.devoir !== \"Devoir\" && value !== \"Élève\") {\n      handleSave();\n      navigate(`/corrections/${state.devoir}+${value}`);\n    }\n  };\n\n  return (\n    <ul>\n      <li>\n        <Link\n          className=\"navbar\"\n          to=\"/\"\n          onClick={() => {\n            dispatch({\n              type: \"DEVOIR\",\n              payload: \"Devoir\",\n            });\n            dispatch({\n              type: \"ELEVE\",\n              payload: \"Élève\",\n            });\n          }}\n        >\n          Home\n        </Link>\n      </li>\n      <Dropdown\n        onClick={handleClickDevoir}\n        name={state.devoir}\n        liste={state.listeDS}\n      />\n      <Dropdown\n        onClick={handleClickEleve}\n        name={state.eleve}\n        liste={state.listeEleves}\n      />\n      <li>\n        <div\n          className={\n            Object.keys(state.toUpdate).length !== 0\n              ? \"navbar sauvegarde\"\n              : \"navbar\"\n          }\n          onClick={handleSave}\n        >\n          Sauvegarde\n        </div>\n      </li>\n    </ul>\n  );\n};\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"katex/dist/katex.min.css\";\nimport Latex from \"react-latex-next\";\nimport \"./Corrections.css\";\nimport { AppContext } from \"../AppContext\";\nconst ENDPOINT = \"https://correction-devoirs.herokuapp.com\";\n\nconst Corrections = ({ id, listeQuestions }) => {\n  const { state, dispatch } = React.useContext(AppContext);\n  const [devoir, eleve] = id.split(\"+\");\n  const [notes, setNotes] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const questions = listeQuestions[devoir];\n  const handleUpdate = (key, value) => {\n    dispatch({\n      type: \"UPDATE\",\n      payload: { key: key, value: value },\n    });\n  };\n\n  useEffect(() => {\n    if (state.eleve === \"Élève\" || state.devoir === \"Devoir\") {\n      dispatch({ type: \"ELEVE\", payload: eleve });\n      dispatch({ type: \"DEVOIR\", payload: devoir });\n    }\n    if (eleve === state.eleve) {\n      axios.get(ENDPOINT + `/api/notes/${id}`).then((res) => {\n        setNotes((n) => res.data);\n        setLoading(false);\n      });\n    }\n  }, [id, devoir, eleve, dispatch, state.devoir, state.eleve]);\n\n  if (isLoading) {\n    return <div>Chargement...</div>;\n  }\n\n  return (\n    <div className=\"correction\">\n      {Object.keys(questions).map((key) => {\n        return (\n          <div className=\"question\" key={key}>\n            {key} : <Latex>{questions[key].question}</Latex>\n            <div className=\"radio-toolbar\">\n              {[\"NT\", \"0\", \"1\", \"2\", \"3\", \"4\"].map((val) => {\n                return (\n                  <div className=\"radio-notes\" key={`${key}+${val}`}>\n                    <input\n                      type=\"radio\"\n                      id={`${key}+${val}`}\n                      name={key}\n                      key={`input${key}+${val}`}\n                      value={val}\n                      defaultChecked={val === notes[key]}\n                      onClick={() => handleUpdate(key, val)}\n                    />\n                    <label htmlFor={`${key}+${val}`} key={`label${key}+${val}`}>\n                      {val}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Corrections;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Home } from \"./Pages/Home\";\nimport Header from \"./Components/Header\";\nimport Corrections from \"./Pages/Corrections\";\nimport { Router } from \"@reach/router\";\nimport \"./App.css\";\nimport { AppContext } from \"./AppContext\";\nimport axios from \"axios\";\n\nconst ENDPOINT = \"https://correction-devoirs.herokuapp.com\";\n\nconst App = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (isLoading) {\n      axios\n        .all([\n          axios.get(ENDPOINT + \"/api/listeeleves\"),\n          axios.get(ENDPOINT + \"/api/listeds\"),\n          axios.get(ENDPOINT + \"/api/listequestions\"),\n        ])\n        .then(\n          axios.spread((res1, res2, res3) => {\n            dispatch({\n              type: \"LISTEELEVES\",\n              payload: res1.data,\n            });\n            dispatch({\n              type: \"LISTEDS\",\n              payload: res2.data,\n            });\n            dispatch({\n              type: \"LISTEQUESTIONS\",\n              payload: res3.data,\n            });\n          })\n        )\n        .finally(setLoading(false));\n    }\n  }, [dispatch, isLoading]);\n\n  if (isLoading) {\n    return <div>Chargement...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <Home path=\"/\" />\n        <Corrections\n          path=\"/corrections/:id\"\n          listeQuestions={state.listeQuestions}\n          key={document.location.href}\n        />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { AppContextProvider } from \"./AppContext\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}